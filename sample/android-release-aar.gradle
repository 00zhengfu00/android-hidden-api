apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

def pub_artifactId = project.PUBLISH_ARTIFACT_ID
def siteUrl = project.siteUrl
def gitUrl = project.gitUrl
def pkgOpts = project.packagingMode
def libsDesc = project.libsDesc

if (project.getPlugins().hasPlugin('com.android.application') ||
        project.getPlugins().hasPlugin('com.android.library')) {
    install {
        repositories.mavenInstaller {
            // This generates POM.xml with proper parameters
            pom {
                project {
                    packaging pkgOpts
                    name pub_artifactId
                    description libsDesc
                    url siteUrl

                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'https://github.com/anggrayudi/android-hidden-api/blob/master/LICENSE'
                        }
                    }
                    developers {
                        developer {
                            id 'anggrayudi'
                            name 'Anggrayudi H'
                            organization "Sonatype"
                            organizationUrl 'http://www.sonatype.com'
                        }
                    }
                    scm {
                        connection "scm:git:git://github.com/anggrayudi/android-hidden-api.git"
                        developerConnection "scm:git:ssh://github.com:anggrayudi/android-hidden-api.git"
                        url "https://github.com/anggrayudi/android-hidden-api"
                    }
                }
            }
        }
    }

    task androidJavadocs(type: Javadoc) {
        failOnError false
        source = android.sourceSets.main.java.sourceFiles
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }

    task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
        classifier = 'javadoc'
        from androidJavadocs.destinationDir
    }

    task androidSourcesJar(type: Jar) {
        from android.sourceSets.main.java.srcDirs
        classifier = 'sources'
    }
} else {
    install {
        repositories.mavenInstaller {
            // This generates POM.xml with proper parameters
            pom {
                project {
                    packaging pkgOpts
                    name pub_artifactId
                    description libsDesc
                    url siteUrl

                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'https://github.com/anggrayudi/android-hidden-api/blob/master/LICENSE'
                        }
                    }
                    developers {
                        developer {
                            id 'anggrayudi'
                            name 'Anggrayudi H'
                            organization "Sonatype"
                            organizationUrl 'http://www.sonatype.com'
                        }
                    }
                    scm {
                        connection "scm:git:git://github.com/anggrayudi/android-hidden-api.git"
                        developerConnection "scm:git:ssh://github.com:anggrayudi/android-hidden-api.git"
                        url "https://github.com/anggrayudi/android-hidden-api"
                    }
                }
            }
        }
    }

    task sourcesJar(type: Jar, dependsOn:classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn:javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

artifacts {
    if (project.getPlugins().hasPlugin('com.android.application') ||
            project.getPlugins().hasPlugin('com.android.library')) {
        archives androidSourcesJar
        archives androidJavadocsJar
    } else {
        archives sourcesJar
        archives javadocJar
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = pub_artifactId
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
        publicDownloadNumbers = true
    }
}